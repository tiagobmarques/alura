/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.tr.alura;

import static org.hamcrest.CoreMatchers.equalTo;
import static org.hamcrest.CoreMatchers.hasItems;
import org.junit.Before;
import org.junit.Test;

import java.util.List;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertThat;

public class AppTest {

    private Avaliador leiloeiro;
    private Usuario joao;
    private Usuario jose;
    private Usuario maria;

    @Before
    public void criaAvaliador() {
        this.leiloeiro = new Avaliador();
        this.joao = new Usuario("João");
        this.jose = new Usuario("José");
        this.maria = new Usuario("Maria");

    }

    @Test(expected = RuntimeException.class)
    public void naoDeveAvaliarLeiloesSemNenhumLanceDado() {
        Leilao leilao = new CriadorDeLeiloes()
                .para("Playstation 3 Novo")
                .constroi();

        leiloeiro.avalia(leilao);
    }

    @Test
    public void deveEntenderLancesEmOrdemCrescente() {
        // parte 1: cenario

        Leilao leilao = new Leilao("Playstation 3 Novo");

        leilao.propoe(new Lance(joao, 300.0));
        leilao.propoe(new Lance(jose, 400.0));
        leilao.propoe(new Lance(maria, 250.0));

        // parte 2: ação
        leiloeiro.avalia(leilao);

        // parte 3: validação
        double maiorEsperado = 400;
        double menorEsperado = 250;

//        assertEquals(maiorEsperado, leiloeiro.getMaiorLance(), 0.00001);
//        assertEquals(menorEsperado, leiloeiro.getMenorLance(), 0.00001);
        assertThat(leiloeiro.getMenorLance(), equalTo(250.0));
        assertThat(leiloeiro.getMaiorLance(), equalTo(400.0));
    }

    @Test
    public void deveEntenderComAPenasUmLance() {
        Leilao leilao = new Leilao("Video");

        leilao.propoe(new Lance(joao, 1000));

        leiloeiro.avalia(leilao);

        assertEquals(1000.0, leiloeiro.getMaiorLance(), 0.00001);
        assertEquals(1000.0, leiloeiro.getMenorLance(), 0.00001);

    }

    @Test
    public void deveEncontrarOsTresMaioresLances() {
        // parte 1: cenario
        Leilao leilao = new CriadorDeLeiloes()
                .para("Playstation 3 Novo")
                .lance(joao, 100)
                .lance(jose, 200)
                .lance(joao, 300)
                .lance(jose, 400)
                .constroi();

        // parte 2: ação
        leiloeiro.avalia(leilao);

        // parte 3: validação

        List<Lance> maiores = leiloeiro.getMaiores();

        assertEquals(3, maiores.size());

        // esta é uma forma de fazer com mais codigos, sem o Hamcrest
        /*assertEquals(400, maiores.get(0).getValor(), 0.00001);
        assertEquals(300, maiores.get(1).getValor(), 0.00001);
        assertEquals(200, maiores.get(2).getValor(), 0.00001);*/

        assertThat(maiores, hasItems(
                new Lance(jose, 400),
                new Lance(joao, 300),
                new Lance(jose, 200)
        ));
    }
}
